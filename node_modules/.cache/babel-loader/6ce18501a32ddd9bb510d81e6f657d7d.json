{"ast":null,"code":"import _slicedToArray from \"/Users/vchandrasekar/Dev/sample-app/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vchandrasekar/Dev/sample-app/weather-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip'; //action\n\nimport { fetchWeather } from \"./actions/fetchWeather\";\nlet cities = [];\n\nfunction App() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        city = _useState2[0],\n        setCity = _useState2[1];\n\n  const addItem = () => {\n    alert('test');\n    setCity([cities], {\n      id: city.length,\n      value: city\n    });\n  }; // console.log(JSON.stringify(addCities));\n\n\n  const weatherSelector = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const getWeatherInfoAction = city => dispatch(fetchWeather(city));\n  /*useEffect(() => {\n    getWeatherInfoAction(\"San Jose\");\n  },{});*/\n\n\n  const getWeatherInfo = e => {\n    e.preventDefault();\n\n    if (city === \"\") {\n      console.log(\"No City Selected\");\n    } else {\n      //cities.push(city);\n      console.log(JSON.stringify(cities));\n      getWeatherInfoAction(city); //console.log(JSON.stringify(cities));\n\n      console.log(weatherSelector.weatherInfo);\n    }\n  };\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap'\n    },\n    chip: {\n      margin: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles();\n  /*function handleClick() {\n    alert(Chip.label);\n  }*/\n\n  let details = \"\";\n\n  if (weatherSelector.weatherInfo && weatherSelector.weatherInfo.hasOwnProperty(\"location\")) {\n    details = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-4 weather-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: weatherSelector.weatherInfo.current.condition.icon,\n      alt: \"Temp Icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-4 weather-location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.location.name), React.createElement(\"p\", {\n      className: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.location.country)), React.createElement(\"div\", {\n      className: \"col-4 weather-temp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"celcious\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.current.temp_c, \"\\xB0C\"), React.createElement(\"p\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.current.condition.text)), React.createElement(\"div\", {\n      className: \"clear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  } else {\n    details = React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"You need to type an exact city name\");\n  }\n  /*{cities.map(city => (\n    <Chip \n      label={city}\n      onClick={handleClick}\n      className={classes.Chip}\n  />))}*/\n\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"headbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Weather\")), React.createElement(\"div\", {\n    className: \"bodySection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, details), React.createElement(\"form\", {\n    className: \"col-12\",\n    onSubmit: getWeatherInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-s-12 col-8 textbox-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"cityname\",\n    placeholder: \"Type City Name\",\n    onChange: e => setCity(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-s-12 col-3 submit-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Check Weather\",\n    onClick: addItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"clear\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vchandrasekar/Dev/sample-app/weather-app/src/App.js"],"names":["React","useState","useEffect","useSelector","useDispatch","makeStyles","Chip","fetchWeather","cities","App","city","setCity","addItem","alert","id","length","value","weatherSelector","state","dispatch","getWeatherInfoAction","getWeatherInfo","e","preventDefault","console","log","JSON","stringify","weatherInfo","useStyles","theme","root","display","justifyContent","flexWrap","chip","margin","spacing","classes","details","hasOwnProperty","current","condition","icon","location","name","country","temp_c","text","target"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\n\n//action\nimport {fetchWeather} from \"./actions/fetchWeather\";\n\nlet cities = [];\n\nfunction App() {\n\n  const [city, setCity] = useState(\"\");\n  const addItem = () => {\n    alert('test');\n    setCity([cities],{\n      id: city.length,\n      value: city\n    })\n  }\n\n // console.log(JSON.stringify(addCities));\n\n  const weatherSelector = useSelector((state) => state);\n\n  const dispatch = useDispatch();\n  const getWeatherInfoAction = (city) => dispatch(fetchWeather(city));\n\n  /*useEffect(() => {\n    getWeatherInfoAction(\"San Jose\");\n  },{});*/\n\n  const getWeatherInfo = (e) => {\n    e.preventDefault();\n    if(city === \"\"){\n      console.log(\"No City Selected\");\n    }else{\n      //cities.push(city);\n      console.log(JSON.stringify(cities));\n      getWeatherInfoAction(city);\n      //console.log(JSON.stringify(cities));\n      console.log(weatherSelector.weatherInfo);\n    }\n  }\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n    },\n    chip: {\n      margin: theme.spacing(1),\n    },\n  }));\n\n  const classes = useStyles();\n\n  /*function handleClick() {\n    alert(Chip.label);\n  }*/\n\n  let details = \"\";\n  if(weatherSelector.weatherInfo && weatherSelector.weatherInfo.hasOwnProperty(\"location\")){\n    details =  <div>\n                <div className=\"col-4 weather-icon\">\n                  <img src={weatherSelector.weatherInfo.current.condition.icon} alt=\"Temp Icon\"/>\n                </div>\n                <div className=\"col-4 weather-location\">\n                  <p className=\"city\">{weatherSelector.weatherInfo.location.name}</p>\n                  <p className=\"country\">{weatherSelector.weatherInfo.location.country}</p>\n                </div>\n                <div className=\"col-4 weather-temp\">\n                  <p className=\"celcious\">{weatherSelector.weatherInfo.current.temp_c}°C</p>\n                  <p className=\"status\">{weatherSelector.weatherInfo.current.condition.text}</p>\n                </div>\n                <div className=\"clear\"></div>\n               </div>;\n  }else{\n    details = <p className=\"error-msg\">You need to type an exact city name</p>\n  }\n\n  /*{cities.map(city => (\n    <Chip \n      label={city}\n      onClick={handleClick}\n      className={classes.Chip}\n  />))}*/\n\n  return (\n    <React.Fragment>\n      <section className=\"row\">\n        <div className=\"col-12 container\">\n          <div className=\"headbar\">\n            <h2>Weather</h2>\n          </div>\n          <div className=\"bodySection\">\n            <div className=\"detail\">      \n              {details}\n            </div>\n            <form className=\"col-12\" onSubmit={getWeatherInfo}>\n              <div className=\"control\">\n                <div className=\"col-s-12 col-8 textbox-container\">\n                  <input type=\"text\" name=\"name\" id=\"cityname\" placeholder=\"Type City Name\" onChange={e => setCity(e.target.value)} />\n                </div>\n                <div className=\"col-s-12 col-3 submit-container\">\n                  <input type=\"submit\" value=\"Check Weather\" onClick={addItem}/>\n                </div>\n                <div className=\"clear\"></div>\n                 \n               </div>\n            </form>\n          </div>\n        </div>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}