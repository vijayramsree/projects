{"ast":null,"code":"import _slicedToArray from \"/Users/vchandrasekar/Dev/sample-app/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vchandrasekar/Dev/sample-app/weather-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport './App.css';\nimport Chip from '@material-ui/core/Chip'; //action\n\nimport { fetchWeather } from \"./actions/fetchWeather\";\nlet cities = [];\n\nfunction App() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        city = _useState2[0],\n        setCity = _useState2[1]; // console.log(JSON.stringify(addCities));\n\n\n  const weatherSelector = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const getWeatherInfoAction = city => dispatch(fetchWeather(city));\n\n  useEffect(() => {\n    getWeatherInfoAction(\"San Jose\");\n  }, {});\n\n  const getWeatherInfo = e => {\n    e.preventDefault();\n\n    if (city === \"\") {\n      console.log(\"No City Selected\");\n    } else {\n      cities.push(city);\n      getWeatherInfoAction(city);\n      console.log(JSON.stringify(\"dhfdshjf\" + city));\n      console.log(weatherSelector.weatherInfo);\n    }\n  };\n\n  const useStyles = makeStyles(theme => ({\n    chip: {\n      margin: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles();\n\n  const handleClick = e => {\n    document.getElementById('cityname').value = e.city;\n    getWeatherInfoAction(e.city);\n  };\n\n  const handleDelete = e => {\n    alert('etst');\n    let index = cities.indexOf(e.city);\n\n    if (index > -1) {\n      cities.splice(index, 1);\n    }\n\n    setCity();\n  };\n\n  let details = \"\";\n\n  if (weatherSelector.weatherInfo && weatherSelector.weatherInfo.hasOwnProperty(\"location\")) {\n    details = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-4 weather-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: weatherSelector.weatherInfo.current.condition.icon,\n      alt: \"Temp Icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-4 weather-location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.location.name), React.createElement(\"p\", {\n      className: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.location.country)), React.createElement(\"div\", {\n      className: \"col-4 weather-temp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"celcious\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.current.temp_c, \"\\xB0C\"), React.createElement(\"p\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.current.condition.text)), React.createElement(\"div\", {\n      className: \"clear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  } else {\n    details = React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"You need to type an exact city name\");\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"headbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Weather\")), React.createElement(\"div\", {\n    className: \"bodySection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, details), React.createElement(\"form\", {\n    className: \"col-12\",\n    onSubmit: getWeatherInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-s-12 col-8 textbox-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"cityname\",\n    placeholder: \"Type City Name\",\n    onChange: e => setCity(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-s-12 col-3 submit-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Check Weather\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"clear\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), cities.map((city, i) => React.createElement(Chip, {\n    key: i,\n    label: city,\n    className: classes.chip,\n    onClick: e => handleClick({\n      city\n    }),\n    onDelete: e => handleDelete({\n      city\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vchandrasekar/Dev/sample-app/weather-app/src/App.js"],"names":["React","useState","useEffect","useSelector","useDispatch","makeStyles","Chip","fetchWeather","cities","App","city","setCity","weatherSelector","state","dispatch","getWeatherInfoAction","getWeatherInfo","e","preventDefault","console","log","push","JSON","stringify","weatherInfo","useStyles","theme","chip","margin","spacing","classes","handleClick","document","getElementById","value","handleDelete","alert","index","indexOf","splice","details","hasOwnProperty","current","condition","icon","location","name","country","temp_c","text","target","map","i"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport './App.css';\nimport Chip from '@material-ui/core/Chip';\n\n//action\nimport {fetchWeather} from \"./actions/fetchWeather\";\n\nlet cities = [];\n\nfunction App() {\n\n  const [city, setCity] = useState(\"\");\n\n // console.log(JSON.stringify(addCities));\n\n  const weatherSelector = useSelector((state) => state);\n\n  const dispatch = useDispatch();\n  const getWeatherInfoAction = (city) => dispatch(fetchWeather(city));\n\n  useEffect(() => {\n    getWeatherInfoAction(\"San Jose\");\n  },{});\n\n  const getWeatherInfo = (e) => {\n    e.preventDefault();\n    if(city === \"\"){\n      console.log(\"No City Selected\");\n    }else{\n      cities.push(city);\n      getWeatherInfoAction(city);\n      console.log(JSON.stringify(\"dhfdshjf\"+city));\n      console.log(weatherSelector.weatherInfo);\n    }\n  }\n\n  const useStyles = makeStyles(theme => ({\n    chip: {\n      margin: theme.spacing(1),\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleClick = (e) => {\n    document.getElementById('cityname').value = e.city;\n    getWeatherInfoAction(e.city);\n  }\n\n  const handleDelete = (e) => {\n    alert('etst');\n    let index = cities.indexOf(e.city);\n    if(index > -1) {\n      cities.splice(index, 1)\n    }\n    setCity();\n  }\n\n\n  let details = \"\";\n  if(weatherSelector.weatherInfo && weatherSelector.weatherInfo.hasOwnProperty(\"location\")){\n    details =  <div>\n                <div className=\"col-4 weather-icon\">\n                  <img src={weatherSelector.weatherInfo.current.condition.icon} alt=\"Temp Icon\"/>\n                </div>\n                <div className=\"col-4 weather-location\">\n                  <p className=\"city\">{weatherSelector.weatherInfo.location.name}</p>\n                  <p className=\"country\">{weatherSelector.weatherInfo.location.country}</p>\n                </div>\n                <div className=\"col-4 weather-temp\">\n                  <p className=\"celcious\">{weatherSelector.weatherInfo.current.temp_c}°C</p>\n                  <p className=\"status\">{weatherSelector.weatherInfo.current.condition.text}</p>\n                </div>\n                <div className=\"clear\"></div>\n               </div>;\n  }else{\n    details = <p className=\"error-msg\">You need to type an exact city name</p>\n  }\n\n  return (\n    <React.Fragment>\n      <section className=\"row\">\n        <div className=\"col-12 container\">\n          <div className=\"headbar\">\n            <h2>Weather</h2>\n          </div>\n          <div className=\"bodySection\">\n            <div className=\"detail\">      \n              {details}\n            </div>\n            <form className=\"col-12\" onSubmit={getWeatherInfo}>\n              <div className=\"control\">\n                <div className=\"col-s-12 col-8 textbox-container\">\n                  <input type=\"text\" name=\"name\" id=\"cityname\" placeholder=\"Type City Name\" onChange={e => setCity(e.target.value)} />\n                </div>\n                <div className=\"col-s-12 col-3 submit-container\">\n                  <input type=\"submit\" value=\"Check Weather\" />\n                </div>\n                <div className=\"clear\"></div>\n                {cities.map((city, i) => (\n                  <Chip \n                      key = {i}\n                      label={city}\n                      className={classes.chip}\n                      onClick={e => handleClick({city})}\n                      onDelete={e => handleDelete({city})}\n                  />))}\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}