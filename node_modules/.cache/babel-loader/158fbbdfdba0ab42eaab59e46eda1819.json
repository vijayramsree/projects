{"ast":null,"code":"import _slicedToArray from \"/Users/vchandrasekar/Dev/sample-app/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vchandrasekar/Dev/sample-app/weather-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\"; //action\n\nimport { fetchWeather } from \"./actions/fetchWeather\";\n\nfunction App() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        city = _useState2[0],\n        setCity = _useState2[1];\n\n  const weatherSelector = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const getWeatherInfoAction = city => dispatch(fetchWeather(city));\n\n  useEffect(() => {\n    getWeatherInfoAction(\"San Jose\");\n  }, {});\n\n  const getWeatherInfo = e => {\n    e.preventDefault();\n\n    if (city === \"\") {\n      console.log(\"No City Selected\");\n    } else {\n      getWeatherInfoAction(city);\n      console.log(weatherSelector.weatherInfo);\n    }\n  };\n\n  let details = \"\";\n\n  if (weatherSelector.weatherInfo) {\n    details = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Weather Details\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.location.name, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.location.country)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.current.temp_c, \"\\xB0C\"), React.createElement(\"img\", {\n      src: weatherSelector.weatherInfo.current.condition.icon,\n      alt: \"Temp Icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.current.condition.text));\n  } else {\n    details = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"You need to type a city\");\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"React Redux Weather App\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Powerd by React Hooks\"))), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: getWeatherInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"City\",\n    onChange: e => setCity(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Check Weather\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), details));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vchandrasekar/Dev/sample-app/weather-app/src/App.js"],"names":["React","useState","useEffect","useSelector","useDispatch","fetchWeather","App","city","setCity","weatherSelector","state","dispatch","getWeatherInfoAction","getWeatherInfo","e","preventDefault","console","log","weatherInfo","details","location","name","country","current","temp_c","condition","icon","text","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from \"react-redux\";\n\n//action\nimport {fetchWeather} from \"./actions/fetchWeather\";\n\nfunction App() {\n\n  const [city, setCity] = useState(\"\");\n\n  const weatherSelector = useSelector((state) => state);\n\n  const dispatch = useDispatch();\n  const getWeatherInfoAction = (city) => dispatch(fetchWeather(city));\n\n  useEffect(() => {\n    getWeatherInfoAction(\"San Jose\");\n  },{});\n\n\n  const getWeatherInfo = (e) => {\n    e.preventDefault();\n    if(city === \"\"){\n      console.log(\"No City Selected\");\n    }else{\n      getWeatherInfoAction(city);\n      console.log(weatherSelector.weatherInfo);\n    }\n  }\n\n  let details = \"\";\n  if(weatherSelector.weatherInfo){\n    details =  <div>\n                <h2>Weather Details</h2>\n                <p>{weatherSelector.weatherInfo.location.name}<span>{weatherSelector.weatherInfo.location.country}</span></p>\n                <p>{weatherSelector.weatherInfo.current.temp_c}Â°C</p>\n                <img src={weatherSelector.weatherInfo.current.condition.icon} alt=\"Temp Icon\"/>\n                <p>{weatherSelector.weatherInfo.current.condition.text}</p>\n               </div>\n  }else{\n    details = <p>You need to type a city</p>\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"App\">\n        <header>\n          <h1>React Redux Weather App</h1>\n          <p>Powerd by React Hooks</p>\n        </header>\n      </div>\n\n      <main>\n        <form onSubmit={getWeatherInfo}>\n          <div className=\"control\">\n            <input type=\"text\" name=\"name\" placeholder=\"City\" onChange={e => setCity(e.target.value)} />\n          </div>\n          <input type=\"submit\" value=\"Check Weather\" />\n        </form>\n       {details}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}