{"ast":null,"code":"import _slicedToArray from \"/Users/vchandrasekar/Dev/sample-app/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vchandrasekar/Dev/sample-app/weather-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip'; //action\n\nimport { fetchWeather } from \"./actions/fetchWeather\";\nimport { ListItemSecondaryAction } from '@material-ui/core';\n\nfunction App() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        city = _useState2[0],\n        setCity = _useState2[1];\n\n  const addCities = () => {\n    console.log('etst');\n    setCity([...city, {\n      id: city.length,\n      value: {\n        city\n      }\n    }]);\n  };\n\n  console.log(JSON.stringify(addCities));\n  const weatherSelector = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const getWeatherInfoAction = city => dispatch(fetchWeather(city));\n\n  useEffect(() => {\n    getWeatherInfoAction(\"San Jose\");\n  }, {});\n  console.log(typeof {\n    city\n  });\n\n  const getWeatherInfo = e => {\n    e.preventDefault();\n\n    if (city === \"\") {\n      console.log(\"No City Selected\");\n    } else {\n      getWeatherInfoAction(city);\n      addCities();\n      console.log(weatherSelector.weatherInfo);\n    }\n  };\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap'\n    },\n    chip: {\n      margin: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles();\n\n  function handleClick() {\n    alert('You clicked the Chip.');\n  }\n\n  let details,\n      chip = \"\";\n\n  if (weatherSelector.weatherInfo && weatherSelector.weatherInfo.hasOwnProperty(\"location\")) {\n    details = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-4 weather-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: weatherSelector.weatherInfo.current.condition.icon,\n      alt: \"Temp Icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-4 weather-location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.location.name), React.createElement(\"p\", {\n      className: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.location.country)), React.createElement(\"div\", {\n      className: \"col-4 weather-temp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"celcious\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.current.temp_c, \"\\xB0C\"), React.createElement(\"p\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, weatherSelector.weatherInfo.current.condition.text)), React.createElement(\"div\", {\n      className: \"clear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n    chip = React.createElement(Chip, {\n      label: city,\n      onClick: handleClick,\n      className: classes.Chip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n  } else {\n    details = React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"You need to type an exact city name\");\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"headbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Weather\")), React.createElement(\"div\", {\n    className: \"bodySection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, details), React.createElement(\"form\", {\n    className: \"col-12\",\n    onSubmit: getWeatherInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-s-12 col-8 textbox-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Type City Name\",\n    onChange: e => setCity(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-s-12 col-3 submit-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Check Weather\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"clear\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), chip))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vchandrasekar/Dev/sample-app/weather-app/src/App.js"],"names":["React","useState","useEffect","useSelector","useDispatch","makeStyles","Chip","fetchWeather","ListItemSecondaryAction","App","city","setCity","addCities","console","log","id","length","value","JSON","stringify","weatherSelector","state","dispatch","getWeatherInfoAction","getWeatherInfo","e","preventDefault","weatherInfo","useStyles","theme","root","display","justifyContent","flexWrap","chip","margin","spacing","classes","handleClick","alert","details","hasOwnProperty","current","condition","icon","location","name","country","temp_c","text","target"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\n\n//action\nimport {fetchWeather} from \"./actions/fetchWeather\";\nimport { ListItemSecondaryAction } from '@material-ui/core';\n\nfunction App() {\n\n  const [city, setCity] = useState(\"\");\n\n  const addCities = () => {\n    console.log('etst');\n    setCity([...city, {\n      id: city.length,\n      value: {city}\n    }])\n  }\n\n  console.log(JSON.stringify(addCities));\n\n  const weatherSelector = useSelector((state) => state);\n\n  const dispatch = useDispatch();\n  const getWeatherInfoAction = (city) => dispatch(fetchWeather(city));\n\n  useEffect(() => {\n    getWeatherInfoAction(\"San Jose\");\n  },{});\n\n console.log(typeof({city}));\n  const getWeatherInfo = (e) => {\n    e.preventDefault();\n    if(city === \"\"){\n      console.log(\"No City Selected\");\n    }else{\n      getWeatherInfoAction(city);\n      addCities();\n      console.log(weatherSelector.weatherInfo);\n    }\n  }\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n    },\n    chip: {\n      margin: theme.spacing(1),\n    },\n  }));\n\n  const classes = useStyles();\n\n  function handleClick() {\n    alert('You clicked the Chip.');\n  }\n\n  let details, chip = \"\";\n  if(weatherSelector.weatherInfo && weatherSelector.weatherInfo.hasOwnProperty(\"location\")){\n    details =  <div>\n                <div className=\"col-4 weather-icon\">\n                  <img src={weatherSelector.weatherInfo.current.condition.icon} alt=\"Temp Icon\"/>\n                </div>\n                <div className=\"col-4 weather-location\">\n                  <p className=\"city\">{weatherSelector.weatherInfo.location.name}</p>\n                  <p className=\"country\">{weatherSelector.weatherInfo.location.country}</p>\n                </div>\n                <div className=\"col-4 weather-temp\">\n                  <p className=\"celcious\">{weatherSelector.weatherInfo.current.temp_c}°C</p>\n                  <p className=\"status\">{weatherSelector.weatherInfo.current.condition.text}</p>\n                </div>\n                <div className=\"clear\"></div>\n               </div>;\n    chip = <Chip \n            label={city}\n            onClick={handleClick}\n            className={classes.Chip}\n  />\n  }else{\n    details = <p className=\"error-msg\">You need to type an exact city name</p>\n  }\n\n  return (\n    <React.Fragment>\n      <section className=\"row\">\n        <div className=\"col-12 container\">\n          <div className=\"headbar\">\n            <h2>Weather</h2>\n          </div>\n          <div className=\"bodySection\">\n            <div className=\"detail\">      \n              {details}\n            </div>\n            <form className=\"col-12\" onSubmit={getWeatherInfo}>\n              <div className=\"control\">\n                <div className=\"col-s-12 col-8 textbox-container\">\n                  <input type=\"text\" name=\"name\" placeholder=\"Type City Name\" onChange={e => setCity(e.target.value)} />\n                </div>\n                <div className=\"col-s-12 col-3 submit-container\">\n                  <input type=\"submit\" value=\"Check Weather\" />\n                </div>\n                <div className=\"clear\"></div>\n                {chip}\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}